<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalyzerDescription" xml:space="preserve">
    <value>Type names should be all uppercase.</value>
  </data>
  <data name="AnalyzerMessageFormat" xml:space="preserve">
    <value>Type name '{0}' contains lowercase letters</value>
  </data>
  <data name="AnalyzerTitle" xml:space="preserve">
    <value>Type name contains lowercase letters</value>
  </data>
  <data name="URA0001Description" xml:space="preserve">
    <value>Should not use method that does not exposed to Udon.</value>
  </data>
  <data name="URA0001MessageFormat" xml:space="preserve">
    <value>Method '{0}' is not exposed to Udon.</value>
  </data>
  <data name="URA0001Title" xml:space="preserve">
    <value>Method is not exposed to Udon.</value>
  </data>
  <data name="URA0002Description" xml:space="preserve">
    <value>Should not use field accessor that does not exposed to Udon.</value>
  </data>
  <data name="URA0002MessageFormat" xml:space="preserve">
    <value>Field Accessor '{0}' is not exposed to Udon.</value>
  </data>
  <data name="URA0002Title" xml:space="preserve">
    <value>Field Accessor is not exposed to Udon.</value>
  </data>
  <data name="URA0003Description" xml:space="preserve">
    <value>UdonSharp only supports 1 type generic methods at the moment</value>
  </data>
  <data name="URA0003MessageFormat" xml:space="preserve">
    <value>UdonSharp only supports 1 type generic methods, but you use {0} type generic method.</value>
  </data>
  <data name="URA0003Title" xml:space="preserve">
    <value>UdonSharp only supports one type generics.</value>
  </data>
  <data name="URA0004Description" xml:space="preserve">
    <value>UdonSharp does not currently supports static method declarations.</value>
  </data>
  <data name="URA0004MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently supports static method declarations.</value>
  </data>
  <data name="URA0004Title" xml:space="preserve">
    <value>UdonSharp does not currently supports static method declaration.</value>
  </data>
  <data name="URA0005Description" xml:space="preserve">
    <value>UdonSharp does not yet support inheriting from interfaces</value>
  </data>
  <data name="URA0005MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support inheriting from interfaces</value>
  </data>
  <data name="URA0005Title" xml:space="preserve">
    <value>UdonSharp does not yet support inheriting from interfaces</value>
  </data>
  <data name="URA0007Description" xml:space="preserve">
    <value>UdonSharp does not currently support constructors on UdonSharpBehaviours, use the Start()</value>
  </data>
  <data name="URA0007MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support constructors on UdonSharpBehaviours, use the Start()</value>
  </data>
  <data name="URA0007Title" xml:space="preserve">
    <value>UdonSharp does not currently support constructors on UdonSharpBehaviour</value>
  </data>
  <data name="URA0008Description" xml:space="preserve">
    <value>User property declarations are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0008MessageFormat" xml:space="preserve">
    <value>User property declarations are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0008Title" xml:space="preserve">
    <value>User property declarations are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0009Description" xml:space="preserve">
    <value>Base type calling is not yet supported by UdonSharp</value>
  </data>
  <data name="URA0009MessageFormat" xml:space="preserve">
    <value>Base type calling is not yet supported by UdonSharp</value>
  </data>
  <data name="URA0009Title" xml:space="preserve">
    <value>Base type calling is not yet supported by UdonSharp</value>
  </data>
  <data name="URA0010Description" xml:space="preserve">
    <value>Default expressions are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0010MessageFormat" xml:space="preserve">
    <value>Default expressions are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0010Title" xml:space="preserve">
    <value>Default expressions are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0011Description" xml:space="preserve">
    <value>Try/Catch/Finally is not supported by UdonSharp since Udon does not have a way to handle exceptions</value>
  </data>
  <data name="URA0011MessageFormat" xml:space="preserve">
    <value>Try/Catch/Finally is not supported by UdonSharp since Udon does not have a way to handle exceptions</value>
  </data>
  <data name="URA0011Title" xml:space="preserve">
    <value>Try/Catch/Finally is not supported by UdonSharp</value>
  </data>
  <data name="URA0012Description" xml:space="preserve">
    <value>UdonSharp does not support throwing exceptions since Udon does not have support for exception throwing at the moment</value>
  </data>
  <data name="URA0012MessageFormat" xml:space="preserve">
    <value>UdonSharp does not support throwing exceptions since Udon does not have support for exception throwing at the moment</value>
  </data>
  <data name="URA0012Title" xml:space="preserve">
    <value>UdonSharp does not support throwing exceptions</value>
  </data>
  <data name="URA0013Description" xml:space="preserve">
    <value>UdonSharp does not support multidimensional arrays at the moment, use jagged arrays instead for now</value>
  </data>
  <data name="URA0013MessageFormat" xml:space="preserve">
    <value>UdonSharp does not support multidimensional arrays at the moment, use jagged arrays instead for now</value>
  </data>
  <data name="URA0013Title" xml:space="preserve">
    <value>UdonSharp does not support multidimensional arrays, use jagged arrays</value>
  </data>
  <data name="URA0014Description" xml:space="preserve">
    <value>UdonSharp does not support multidimensional array accesses yet</value>
  </data>
  <data name="URA0014MessageFormat" xml:space="preserve">
    <value>UdonSharp does not support multidimensional array accesses yet</value>
  </data>
  <data name="URA0014Title" xml:space="preserve">
    <value>UdonSharp does not support multidimensional array accesses yet</value>
  </data>
  <data name="URA0015Description" xml:space="preserve">
    <value>UdonSharp does not currently support null conditional operators</value>
  </data>
  <data name="URA0015MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support null conditional operators</value>
  </data>
  <data name="URA0015Title" xml:space="preserve">
    <value>UdonSharp does not currently support null conditional operators</value>
  </data>
  <data name="URA0016Description" xml:space="preserve">
    <value>Udon does not support the 'Awake' event, use 'Start' instead</value>
  </data>
  <data name="URA0016MessageFormat" xml:space="preserve">
    <value>Udon does not support the 'Awake' event, use 'Start' instead</value>
  </data>
  <data name="URA0016Title" xml:space="preserve">
    <value>Udon does not support the 'Awake' event, use 'Start' instead</value>
  </data>
  <data name="URA0017Description" xml:space="preserve">
    <value>UdonSharp does not yet support 'out' parameters on user-defined methods</value>
  </data>
  <data name="URA0017MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support 'out' parameters on user-defined methods</value>
  </data>
  <data name="URA0017Title" xml:space="preserve">
    <value>UdonSharp does not yet support 'out' parameters on user-defined methods</value>
  </data>
  <data name="URA0018Description" xml:space="preserve">
    <value>UdonSharp does not yet support 'in' parameters on user-defined methods</value>
  </data>
  <data name="URA0018MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support 'in' parameters on user-defined methods</value>
  </data>
  <data name="URA0018Title" xml:space="preserve">
    <value>UdonSharp does not yet support 'in' parameters on user-defined methods</value>
  </data>
  <data name="URA0019Description" xml:space="preserve">
    <value>UdonSharp does not yet support 'ref' parameters on user-defined methods</value>
  </data>
  <data name="URA0019MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support 'ref' parameters on user-defined methods</value>
  </data>
  <data name="URA0019Title" xml:space="preserve">
    <value>UdonSharp does not yet support 'ref' parameters on user-defined methods</value>
  </data>
  <data name="URA0020Description" xml:space="preserve">
    <value>The 'is' keyword is not yet supported by UdonSharp since Udon does not expose what is necessary</value>
  </data>
  <data name="URA0020MessageFormat" xml:space="preserve">
    <value>The 'is' keyword is not yet supported by UdonSharp since Udon does not expose what is necessary</value>
  </data>
  <data name="URA0020Title" xml:space="preserve">
    <value>The 'is' keyword is not yet supported by UdonSharp</value>
  </data>
  <data name="URA0021Description" xml:space="preserve">
    <value>The 'as' keyword is not yet supported by UdonSharp since Udon does not expose what is necessary</value>
  </data>
  <data name="URA0021MessageFormat" xml:space="preserve">
    <value>The 'as' keyword is not yet supported by UdonSharp since Udon does not expose what is necessary</value>
  </data>
  <data name="URA0021Title" xml:space="preserve">
    <value>The 'as' keyword is not yet supported by UdonSharp</value>
  </data>
  <data name="URA0022Description" xml:space="preserve">
    <value>UdonSharp does not currently support type checking with the 'is' keyword since Udon does not yet expose the proper functionality for type checking.</value>
  </data>
  <data name="URA0022MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support type checking with the 'is' keyword since Udon does not yet expose the proper functionality for type checking.</value>
  </data>
  <data name="URA0022Title" xml:space="preserve">
    <value>UdonSharp does not currently support type checking with the 'is' keyword</value>
  </data>
  <data name="URA0023Description" xml:space="preserve">
    <value>Only one class declaration per file is currently supported by UdonSharp</value>
  </data>
  <data name="URA0023MessageFormat" xml:space="preserve">
    <value>Only one class declaration per file is currently supported by UdonSharp</value>
  </data>
  <data name="URA0023Title" xml:space="preserve">
    <value>Only one class declaration per file is currently supported by UdonSharp</value>
  </data>
  <data name="URA0024Description" xml:space="preserve">
    <value>UdonSharp custom methods currently do not support default arguments or params arguments</value>
  </data>
  <data name="URA0024MessageFormat" xml:space="preserve">
    <value>UdonSharp custom methods currently do not support default arguments or params arguments</value>
  </data>
  <data name="URA0024Title" xml:space="preserve">
    <value>UdonSharp custom methods currently do not support default arguments or params arguments</value>
  </data>
  <data name="URA0025Description" xml:space="preserve">
    <value>Static fields are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0025MessageFormat" xml:space="preserve">
    <value>Static fields are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0025Title" xml:space="preserve">
    <value>Static fields are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0026Description" xml:space="preserve">
    <value>Udon does not support return values of this type</value>
  </data>
  <data name="URA0026MessageFormat" xml:space="preserve">
    <value>Udon does not support return values of type '{0}' yet</value>
  </data>
  <data name="URA0026Title" xml:space="preserve">
    <value>Udon does not support return values of this type</value>
  </data>
  <data name="URA0027Description" xml:space="preserve">
    <value>Udon does not support method parameters of this type</value>
  </data>
  <data name="URA0027MessageFormat" xml:space="preserve">
    <value>Udon does not support method parameters of type '{0}' yet</value>
  </data>
  <data name="URA0027Title" xml:space="preserve">
    <value>Udon does not support method parameters of this type</value>
  </data>
  <data name="URA0029Description" xml:space="preserve">
    <value>UdonSharp does not currently support using typeof on user defined types</value>
  </data>
  <data name="URA0029MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support using typeof on user defined types</value>
  </data>
  <data name="URA0029Title" xml:space="preserve">
    <value>UdonSharp does not currently support using typeof on user defined types</value>
  </data>
  <data name="URA0030Description" xml:space="preserve">
    <value>UdonSharp does not yet support static using directives</value>
  </data>
  <data name="URA0030MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support static using directives</value>
  </data>
  <data name="URA0030Title" xml:space="preserve">
    <value>UdonSharp does not yet support static using directives</value>
  </data>
  <data name="URA0031Description" xml:space="preserve">
    <value>UdonSharp does not yet support namespace alias directives</value>
  </data>
  <data name="URA0031MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support namespace alias directives</value>
  </data>
  <data name="URA0031Title" xml:space="preserve">
    <value>UdonSharp does not yet support namespace alias directives</value>
  </data>
  <data name="URA0032Description" xml:space="preserve">
    <value>Udon does not support variables of this type</value>
  </data>
  <data name="URA0032MessageFormat" xml:space="preserve">
    <value>Udon does not support variables of type '{0}' yet</value>
  </data>
  <data name="URA0032Title" xml:space="preserve">
    <value>Udon does not support variables of this type</value>
  </data>
  <data name="URA0033Description" xml:space="preserve">
    <value>Udon does not currently support syncing of the this type</value>
  </data>
  <data name="URA0033MessageFormat" xml:space="preserve">
    <value>Udon does not currently support syncing of the type '{0}'</value>
  </data>
  <data name="URA0033Title" xml:space="preserve">
    <value>Udon does not currently support syncing of the this type</value>
  </data>
  <data name="URA0034Description" xml:space="preserve">
    <value>Udon does not support linear interpolation of the synced type</value>
  </data>
  <data name="URA0034MessageFormat" xml:space="preserve">
    <value>Udon does not support linear interpolation of the synced type '{0}'</value>
  </data>
  <data name="URA0034Title" xml:space="preserve">
    <value>Udon does not support linear interpolation of the synced type</value>
  </data>
  <data name="URA0035Description" xml:space="preserve">
    <value>Udon does not support variable tweening when the behaviour is in Manual sync mode</value>
  </data>
  <data name="URA0035MessageFormat" xml:space="preserve">
    <value>Udon does not support variable tweening when the behaviour is in Manual sync mode</value>
  </data>
  <data name="URA0035Title" xml:space="preserve">
    <value>Udon does not support variable tweening when the behaviour is in Manual sync mode</value>
  </data>
  <data name="URA0036Description" xml:space="preserve">
    <value>Syncing of array type is only supported in manual sync mode</value>
  </data>
  <data name="URA0036MessageFormat" xml:space="preserve">
    <value>Syncing of array type '{0}[]' is only supported in manual sync mode</value>
  </data>
  <data name="URA0036Title" xml:space="preserve">
    <value>Syncing of array type is only supported in manual sync mode</value>
  </data>
  <data name="URA0037Description" xml:space="preserve">
    <value>UdonSharp does not yet support goto</value>
  </data>
  <data name="URA0037MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support goto</value>
  </data>
  <data name="URA0037Title" xml:space="preserve">
    <value>UdonSharp does not yet support goto</value>
  </data>
  <data name="URA0038Description" xml:space="preserve">
    <value>UdonSharp does not yet support labeled statements</value>
  </data>
  <data name="URA0038MessageFormat" xml:space="preserve">
    <value>UdonSharp does not yet support labeled statements</value>
  </data>
  <data name="URA0038Title" xml:space="preserve">
    <value>UdonSharp does not yet support labeled statements</value>
  </data>
  <data name="URA0039Description" xml:space="preserve">
    <value>Object initializers are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0039MessageFormat" xml:space="preserve">
    <value>Object initializers are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0039Title" xml:space="preserve">
    <value>Object initializers are not yet supported by UdonSharp</value>
  </data>
  <data name="URA0040Description" xml:space="preserve">
    <value>Nullable types are not currently supported by UdonSharp</value>
  </data>
  <data name="URA0040MessageFormat" xml:space="preserve">
    <value>Nullable types are not currently supported by UdonSharp</value>
  </data>
  <data name="URA0040Title" xml:space="preserve">
    <value>Nullable types are not currently supported by UdonSharp</value>
  </data>
  <data name="URA0041Description" xml:space="preserve">
    <value>The method called by SendCustomNetworkEvent must be public</value>
  </data>
  <data name="URA0041MessageFormat" xml:space="preserve">
    <value>The method called by SendCustomNetworkEvent must be public</value>
  </data>
  <data name="URA0041Title" xml:space="preserve">
    <value>The method called by SendCustomNetworkEvent must be public</value>
  </data>
  <data name="URA0042Description" xml:space="preserve">
    <value>The method specify for SendCustomNetworkEvent must be public</value>
  </data>
  <data name="URA0042MessageFormat" xml:space="preserve">
    <value>The specified method '{0}' is not public in '{1}'</value>
  </data>
  <data name="URA0042Title" xml:space="preserve">
    <value>The method specify for SendCustomNetworkEvent must be public</value>
  </data>
  <data name="URA0043Description" xml:space="preserve">
    <value>The method called over the network cannot start with _</value>
  </data>
  <data name="URA0043MessageFormat" xml:space="preserve">
    <value>The method called over the network cannot start with _</value>
  </data>
  <data name="URA0043Title" xml:space="preserve">
    <value>The method called over the network cannot start with _</value>
  </data>
  <data name="URA0044Description" xml:space="preserve">
    <value>The method specify for SendCustomNetworkEvent cannot start with _</value>
  </data>
  <data name="URA0044MessageFormat" xml:space="preserve">
    <value>The specified method '{0}' in '{1}' starts with underscore, it cannot be called over the network</value>
  </data>
  <data name="URA0044Title" xml:space="preserve">
    <value>The method specify for SendCustomNetworkEvent cannot start with _</value>
  </data>
  <data name="URA0045Description" xml:space="preserve">
    <value>The method specify for SendCustomEvent is not declared in receiver</value>
  </data>
  <data name="URA0045MessageFormat" xml:space="preserve">
    <value>The specified method '{0}' in {1} is not declared in '{2}'</value>
  </data>
  <data name="URA0045Title" xml:space="preserve">
    <value>The method specify for SendCustomEvent is not declared in receiver</value>
  </data>
  <data name="URA0046Description" xml:space="preserve">
    <value>Udon does not support smooth interpolation of the synced type</value>
  </data>
  <data name="URA0046MessageFormat" xml:space="preserve">
    <value>Udon does not support smooth interpolation of the synced type '{0}'</value>
  </data>
  <data name="URA0046Title" xml:space="preserve">
    <value>Udon does not support smooth interpolation of the synced type</value>
  </data>
  <data name="URA0047Description" xml:space="preserve">
    <value>The generic method of GetComponent&lt;T&gt;() is currently broken in Udon for SDK3 Components</value>
  </data>
  <data name="URA0047MessageFormat" xml:space="preserve">
    <value>'{0}&lt;T&gt;()' is currently broken in Udon for SDK3 Components</value>
  </data>
  <data name="URA0047Title" xml:space="preserve">
    <value>The generic method of GetComponent&lt;T&gt;() is currently broken in Udon for SDK3 Components</value>
  </data>
  <data name="URA0048Description" xml:space="preserve">
    <value>UdonSharp does not currently support C# 7.1 language features</value>
  </data>
  <data name="URA0048MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support C# 7.1 language features: {0}</value>
  </data>
  <data name="URA0048Title" xml:space="preserve">
    <value>UdonSharp does not currently support C# 7.1 language features</value>
  </data>
  <data name="URA0049Description" xml:space="preserve">
    <value>UdonSharp does not currently support C# 7.2 language features</value>
  </data>
  <data name="URA0049MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support C# 7.2 language features: {0}</value>
  </data>
  <data name="URA0049Title" xml:space="preserve">
    <value>UdonSharp does not currently support C# 7.2 language features</value>
  </data>
  <data name="URA0050Description" xml:space="preserve">
    <value>UdonSharp does not currently support static user-defined property declarations</value>
  </data>
  <data name="URA0050MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support static user-defined property declarations</value>
  </data>
  <data name="URA0050Title" xml:space="preserve">
    <value>UdonSharp does not currently support static user-defined property declarations</value>
  </data>
  <data name="URA0051Description" xml:space="preserve">
    <value>UdonSharp does not currently support initializers on properties</value>
  </data>
  <data name="URA0051MessageFormat" xml:space="preserve">
    <value>UdonSharp does not currently support initializers on properties</value>
  </data>
  <data name="URA0051Title" xml:space="preserve">
    <value>UdonSharp does not currently support initializers on properties</value>
  </data>
  <data name="URA0052Description" xml:space="preserve">
    <value>Cannot set field with FieldChangeCallbackAttribute, use a property or SetProgramVariable</value>
  </data>
  <data name="URA0052MessageFormat" xml:space="preserve">
    <value>Cannot set field with FieldChangeCallbackAttribute, use a property or SetProgramVariable</value>
  </data>
  <data name="URA0052Title" xml:space="preserve">
    <value>Cannot set field with FieldChangeCallbackAttribute, use a property or SetProgramVariable</value>
  </data>
  <data name="URA0053Description" xml:space="preserve">
    <value>Invalid target property for FieldChangeCallbackAttribute</value>
  </data>
  <data name="URA0053MessageFormat" xml:space="preserve">
    <value>Invalid target property for FieldChangeCallbackAttribute on {0}</value>
  </data>
  <data name="URA0053Title" xml:space="preserve">
    <value>Invalid target property for FieldChangeCallbackAttribute</value>
  </data>
</root>