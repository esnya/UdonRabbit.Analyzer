name: Automatic Release by Tag

on:
  push:
    # branches:
    #   - "*"
    tags:
      - "v**"

jobs:
  automatic-release-for-nuget:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
          source-url: "https://nuget.pkg.github.com/mika-f/index.json"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the project
        run: dotnet build --configuration Release Source/UdonRabbit.Analyzer.Package/

      - name: Create the package
        run: dotnet pack --configuration Release Source/UdonRabbit.Analyzer.Package/

      - uses: actions/upload-artifact@v2
        with:
          name: UdonRabbit.Analyzer.nupkg
          path: Source/UdonRabbit.Analyzer.Package/bin/Release/*.nupkg

      - name: Publish the package to GPR
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo ${{ github.ref }} | % { $_ -replace "refs/tags/v", "" } | Set-Item -Path Env:VERSION
          dotnet nuget push ./Source/UdonRabbit.Analyzer.Package/bin/Release/UdonRabbit.Analyzer.$env:VERSION.nupkg

      # - name: Publish the package to Releases
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: Source/UdonRabbit.Analyzer.Package/bin/Release/*.nupkg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  automatic-release-for-vs:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: nuget/setup-nuget@v1

      - name: Restore NuGet packages
        run: nuget restore Source/UdonRabbit.Analyzer.sln

      - uses: microsoft/setup-msbuild@v1.0.2

      - name: Build the project
        run: MSBuild.exe Source/UdonRabbit.Analyzer.sln -p:Configuration=Release

      - uses: actions/upload-artifact@v2
        with:
          name: UdonRabbit.Analyzer.VisualStudio.vsix
          path: Source/UdonRabbit.Analyzer.VisualStudio/bin/Release/**/UdonRabbit.Analyzer.VisualStudio.vsix

      # - name: Publish the package to Releases
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: Source/UdonRabbit.Analyzer.VisualStudio/bin/Release/**/UdonRabbit.Analyzer.VisualStudio.vsix
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  automatic-release-for-vsc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
          source-url: "https://nuget.pkg.github.com/mika-f/index.json"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Build the project (VS)
        run: dotnet build --configuration Release Source/UdonRabbit.Analyzer.Package/

      - name: Build the project (TSC)
        working-directory: Source/UdonRabbit.Analyzer.VisualStudioCode
        run: |
          yarn install
          yarn run compile
          cp ../UdonRabbit.Analyzer.Package/bin/Release/netstandard2.0/UdonRabbit.Analyzer.CodeFixes.dll ./externals/UdonRabbit.Analyzer.CodeFixes.dll
          cp ../UdonRabbit.Analyzer.Package/bin/Release/netstandard2.0/UdonRabbit.Analyzer.dll ./externals/UdonRabbit.Analyzer.dll

      - name: Packaging for VS Code
        working-directory: Source/UdonRabbit.Analyzer.VisualStudio
        run: |
          yarn global add vsce
          vsce package

      - uses: actions/upload-artifact@v2
        with:
          name: UdonRabbit.Analyzer.VSCode.nupkg
          path: Source/UdonRabbit.Analyzer.VisualStudioCode/*.vsix

      # - name: Publish the package to Releases
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: Source/UdonRabbit.Analyzer.Package/bin/Release/*.nupkg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
